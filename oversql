SET @star_time='2018-04-01 00:00:00',
    @end_time='2018-10-01 00:00:00';
    
DROP TABLE IF EXISTS policy.tmp_zym_sjd_loan;
CREATE TABLE policy.tmp_zym_sjd_loan
SELECT user_id,borrow_nid,add_time,account,
       CASE WHEN borrow_type IN (6,7) THEN '01.dq'
            WHEN borrow_type=8 THEN '02.fq'
       ELSE '03.qt' END AS product_type,
       CASE WHEN is_new IN (-1,1) THEN '01.new'
            WHEN is_new=0 AND is_qx=0 THEN '02.old'
            WHEN is_new=0 AND is_qx=1 THEN '03.qx'
       ELSE '04.qt' END AS kh_bin,
       CASE WHEN DAY=90 THEN 1
            WHEN DAY=180 THEN 2
            WHEN DAY=270 THEN 3
            WHEN DAY=360 THEN 4
       ELSE 5 END AS fq_type,
       CASE WHEN channel_category LIKE 'app%' THEN '01.app'
            WHEN channel_category='流量超市' THEN '02.market'
            WHEN channel_category='微站' THEN '03.wechat'
       ELSE '04.qt' END AS channel_bin
FROM jujube.`dw_riskdata_zc_borrow_info`
WHERE borrow_type IN (6,7,8)
  AND STATUS IN (3,5)
  AND add_product='shoujidai'
  AND repay_period=1
  AND add_time>=@star_time
  AND add_time<@end_time
;
CREATE INDEX index1 ON policy.tmp_zym_sjd_loan(borrow_nid);


SET @date='2018-10-01';
DROP TABLE IF EXISTS policy.tmp_zym_sjd_end_over;
CREATE TABLE IF NOT EXISTS policy.tmp_zym_sjd_end_over AS
SELECT 	DATE_FORMAT(B.add_time,'%Y-%m') AS loan_month,
	A.BORROW_NID,
	A.ID AS schedule_id,
	B.USER_ID,
	B.fq_type,
	B.product_type,
	B.kh_bin,
	B.channel_bin,
	A.REPAY_CAPITAL AS amount,
	0 AS repay_amount,
	A.repay_time,
	A.REPAY_YESTIME,
	CASE WHEN A.repay_yestime IS NULL AND A.REPAY_TIME>=@DATE THEN 0
             WHEN A.repay_yestime IS NULL AND A.REPAY_TIME<@DATE THEN DATEDIFF(DATE_SUB(@DATE,INTERVAL 1 DAY),A.repay_time)
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME>=@DATE THEN 0
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME<@DATE AND A.repay_yestime>=@date AND A.repay_yestime>A.REPAY_TIME THEN DATEDIFF(DATE_SUB(@DATE,INTERVAL 1 DAY),A.repay_time)
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME<@DATE AND A.repay_yestime<@date AND A.repay_yestime>A.REPAY_TIME THEN DATEDIFF(A.repay_yestime,A.repay_time)
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME<@DATE AND A.repay_yestime<=A.REPAY_TIME THEN 0      
	END AS late_days,
	0 AS max_late_days
FROM 	cw_mobp2p.t_repay_schedule AS A INNER JOIN 
	policy.tmp_zym_sjd_loan AS B ON A.BORROW_NID=B.BORROW_NID
WHERE 	B.add_time<@date
;
CREATE INDEX index1 ON policy.tmp_zym_sjd_end_over(borrow_nid);
CREATE INDEX index2 ON policy.tmp_zym_sjd_end_over(schedule_id);


-- 计算月底最大逾期天数
DROP TABLE policy.tmp_zym_max_late_day;
CREATE TABLE policy.tmp_zym_max_late_day
SELECT borrow_nid,
       MAX(late_days) AS max_late_days
FROM policy.tmp_zym_sjd_end_over
GROUP BY 1;
ALTER TABLE policy.tmp_zym_max_late_day ADD INDEX(borrow_nid);
UPDATE  policy.tmp_zym_sjd_end_over AS A INNER JOIN
	policy.tmp_zym_max_late_day AS B ON A.borrow_nid=B.borrow_nid
SET	A.max_late_days=B.max_late_days;
-- 计算月底已还金额

SET @date='2018-10-01';
DROP TABLE IF EXISTS policy.tmp_zym_repay_0;
CREATE TABLE policy.tmp_zym_repay_0 AS
	SELECT a.*,
		B.AMOUNT AS repay_amount_0
	FROM 	policy.tmp_zym_sjd_end_over a 
		INNER JOIN cw_mobp2p.t_repay_write_off  B ON a.schedule_id=B.SCHEDULE_ID 
		INNER JOIN cw_mobp2p.t_account_repay  C ON B.REPAY_INFO_ID=C.ID
	WHERE 	B.STATUS IN ('SUCCESS','FINISHED')
		AND 	B.TYPE='REPAY'/*正常还款:REPAY*/
		AND 	B.DELETED_FLAG=1
		AND 	C.STATUS IN ('FINISHED','FINISHED_PENDING','FINISHED_REFUND','PENDING')/*  挂账中:PENDING  已销账:FINISHED*/
		AND 	C.REPAY_TIME<@date
	;
CREATE INDEX index2 ON policy.tmp_zym_repay_0(schedule_id);


DROP TABLE IF EXISTS policy.tmp_zym_repay;
CREATE TABLE policy.tmp_zym_repay AS
	SELECT schedule_id,
		SUM(repay_amount_0) AS repay_amount
	FROM policy.tmp_zym_repay_0
	GROUP BY schedule_id;
-- 1
ALTER TABLE policy.tmp_zym_repay ADD INDEX(schedule_id);


-- 修改已还金额
UPDATE  policy.tmp_zym_sjd_end_over AS A INNER JOIN
	policy.tmp_zym_repay AS B ON A.schedule_id=B.schedule_id
SET	A.repay_amount=B.repay_amount;
-- 计算月底逾期
SET @date='2018-10-01';
SELECT	DATE_FORMAT(DATE_SUB(@date,INTERVAL 1 DAY),'%Y-%m') AS '截止月份',
        fq_type,
	product_type,
	kh_bin,
	channel_bin,
	loan_month,
	COUNT(DISTINCT BORROW_NID) AS cnt,
	SUM(amount) AS amt,
	SUM(CASE WHEN max_late_days>90 THEN amount-repay_amount ELSE 0 END) AS m4_wh_total,
	COUNT(DISTINCT CASE WHEN max_late_days>90 THEN BORROW_NID END) AS m4_cnt
FROM 	policy.tmp_zym_sjd_end_over
GROUP BY 1,2,3,4,5,6



