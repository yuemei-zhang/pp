         -- 借款表
 DROP TABLE policy.tmp_zym_big_borrow;
 CREATE TABLE policy.tmp_zym_big_borrow AS 
WITH td AS
 ( SELECT a.user_id,a.task_time,a.customer_cluster_type,a.amount,a.adddate,b.add_time,b.account,b.borrow_nid,b.STATUS,b.borrow_period,b.borrow_type,b.verify_type,
   CASE WHEN channel_category LIKE 'app%' THEN '01.app'
            WHEN channel_category='流量超市' THEN '02.market'
            WHEN channel_category='微站' THEN '03.wechat'
       ELSE '04.qt' END AS channel_bin,
        borrow_period fq_type,
 repay_capital,repay_time,repay_yestime,late_days,repay_status,DATEDIFF(b.add_time,a.ADDDATE) AS DAY
 FROM  policy.tmp_zym_big_amount_2  a
 LEFT JOIN jujube_dw.t_adl_borrow_sjd b
 ON  a.user_id =b.user_id 
WHERE b.add_time>'2018-04-21' AND b.borrow_type=8 AND b.is_new_product=1)
 SELECT * FROM td WHERE DAY>=0 AND DAY<=30;
 
--最新一笔
DROP TABLE policy.tmp_zym_big_borrow_loan1;
CREATE TABLE policy.tmp_zym_big_borrow_loan1 AS
WITH td AS
 (SELECT *,row_number() over (PARTITION BY user_id,to_date(add_time) ORDER BY DAY ASC) AS r1 FROM policy.tmp_zym_big_borrow) 
 SELECT * FROM td WHERE td.r1=1 and td.STATUS IN (3,5);
 
 select count(distinct borrow_nid) ,count(borrow_nid) from policy.tmp_zym_big_borrow_loan1;
 
DROP TABLE IF EXISTS policy.tmp_zym_sjd_end_over;
CREATE TABLE IF NOT EXISTS policy.tmp_zym_sjd_end_over AS
SELECT substring(B.add_time,1,7) AS loan_month,customer_cluster_type,
	A.BORROW_NID,
	A.ID AS schedule_id,
	B.USER_ID,
	B.fq_type ,
	B.channel_bin,
	A.REPAY_CAPITAL AS amount,
	A.repay_time,
	A.REPAY_YESTIME,
	CASE WHEN A.repay_yestime IS NULL AND A.REPAY_TIME>='2018-10-01' THEN 0
             WHEN A.repay_yestime IS NULL AND A.REPAY_TIME<'2018-10-01' THEN DATEDIFF(DATE_SUB('2018-10-01',1),A.repay_time)
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME>='2018-10-01' THEN 0
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME<'2018-10-01' AND A.repay_yestime>='2018-10-01' AND A.repay_yestime>A.REPAY_TIME THEN DATEDIFF(DATE_SUB('2018-10-01',1),A.repay_time)
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME<'2018-10-01' AND A.repay_yestime<'2018-10-01' AND A.repay_yestime>A.REPAY_TIME THEN DATEDIFF(A.repay_yestime,A.repay_time)
             WHEN A.repay_yestime IS NOT NULL AND A.REPAY_TIME<'2018-10-01' AND A.repay_yestime<=A.REPAY_TIME THEN 0      
	END AS late_days

FROM 	cw_mobp2p.t_repay_schedule AS A INNER JOIN 
	policy.tmp_zym_big_borrow_loan1 AS B ON A.BORROW_NID=B.BORROW_NID
WHERE 	B.add_time<'2018-10-01'
;


DROP TABLE policy.tmp_zym_max_late_day;
CREATE TABLE policy.tmp_zym_max_late_day as
SELECT borrow_nid,
       MAX(late_days) AS max_late_days
FROM policy.tmp_zym_sjd_end_over
GROUP BY borrow_nid;

-- 计算月底已还金额

DROP TABLE IF EXISTS policy.tmp_zym_repay_0;
CREATE TABLE policy.tmp_zym_repay_0 AS
	SELECT a.*,
		B.AMOUNT AS repay_amount_0
	FROM 	policy.tmp_zym_sjd_end_over a 
		INNER JOIN cw_mobp2p.t_repay_write_off  B ON a.schedule_id=B.SCHEDULE_ID 
		INNER JOIN cw_mobp2p.t_account_repay  C ON B.REPAY_INFO_ID=C.ID
	WHERE 	B.STATUS IN ('SUCCESS','FINISHED')
		AND 	B.TYPE='REPAY'
		AND 	B.DELETED_FLAG=1
		AND 	C.STATUS IN ('FINISHED','FINISHED_PENDING','FINISHED_REFUND','PENDING')
		AND 	C.REPAY_TIME<'2018-10-01'
	;

DROP TABLE IF EXISTS policy.tmp_zym_repay;
CREATE TABLE policy.tmp_zym_repay AS
	SELECT schedule_id,
		SUM(repay_amount_0) AS repay_amount
	FROM policy.tmp_zym_repay_0
	GROUP BY schedule_id;

drop table 	policy.tmp_zym_sjd_end_over_total;
create table policy.tmp_zym_sjd_end_over_total as 
select a.*,
b.max_late_days,c.repay_amount as repay_amount_tmp,case when c.repay_amount is null then 0 else c.repay_amount end as repay_amount
from policy.tmp_zym_sjd_end_over a
left join policy.tmp_zym_max_late_day b  ON A.borrow_nid=B.borrow_nid
left join policy.tmp_zym_repay c  ON A.schedule_id=c.schedule_id;


SELECT	substring(DATE_SUB('2018-10-01 00:00:00',1),1,7) AS tongji_yue,customer_cluster_type,
        fq_type,
	channel_bin,
	loan_month,
	COUNT(DISTINCT BORROW_NID) AS cnt,
	SUM(amount) AS amt,
	SUM(CASE WHEN max_late_days>90 THEN amount-repay_amount ELSE 0 END) AS m4_wh_total,
	COUNT(DISTINCT CASE WHEN max_late_days>90 THEN BORROW_NID END) AS m4_cnt
FROM 	policy.tmp_zym_sjd_end_over_total
GROUP BY substring(DATE_SUB('2018-10-01 00:00:00',1),1,7),customer_cluster_type,fq_type,channel_bin,loan_month;
